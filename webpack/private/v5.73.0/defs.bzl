"@generated by @aspect_rules_js//npm/private:npm_translate_lock.bzl from pnpm lock file @//:pnpm-lock.yaml"

# buildifier: disable=bzl-visibility
load("@aspect_rules_js//npm/private:npm_linked_packages.bzl", "npm_linked_packages")
load("@npm_webpack__at_bazel_worker__5.5.0__links//:defs.bzl", link_0 = "npm_link_package")
load("@npm_webpack__at_discoveryjs_json-ext__0.5.7__links//:defs.bzl", link_1 = "npm_link_package")
load("@npm_webpack__at_jridgewell_gen-mapping__0.3.1__links//:defs.bzl", link_2 = "npm_link_package")
load("@npm_webpack__at_jridgewell_resolve-uri__3.0.7__links//:defs.bzl", link_3 = "npm_link_package")
load("@npm_webpack__at_jridgewell_set-array__1.1.1__links//:defs.bzl", link_4 = "npm_link_package")
load("@npm_webpack__at_jridgewell_source-map__0.3.2__links//:defs.bzl", link_5 = "npm_link_package")
load("@npm_webpack__at_jridgewell_sourcemap-codec__1.4.13__links//:defs.bzl", link_6 = "npm_link_package")
load("@npm_webpack__at_jridgewell_trace-mapping__0.3.13__links//:defs.bzl", link_7 = "npm_link_package")
load("@npm_webpack__at_leichtgewicht_ip-codec__2.0.4__links//:defs.bzl", link_8 = "npm_link_package")
load("@npm_webpack__at_types_body-parser__1.19.2__links//:defs.bzl", link_9 = "npm_link_package")
load("@npm_webpack__at_types_bonjour__3.5.10__links//:defs.bzl", link_10 = "npm_link_package")
load("@npm_webpack__at_types_connect-history-api-fallback__1.3.5__links//:defs.bzl", link_11 = "npm_link_package")
load("@npm_webpack__at_types_connect__3.4.35__links//:defs.bzl", link_12 = "npm_link_package")
load("@npm_webpack__at_types_eslint-scope__3.7.3__links//:defs.bzl", link_13 = "npm_link_package")
load("@npm_webpack__at_types_eslint__8.4.2__links//:defs.bzl", link_14 = "npm_link_package")
load("@npm_webpack__at_types_estree__0.0.51__links//:defs.bzl", link_15 = "npm_link_package")
load("@npm_webpack__at_types_express-serve-static-core__4.17.28__links//:defs.bzl", link_16 = "npm_link_package")
load("@npm_webpack__at_types_express__4.17.13__links//:defs.bzl", link_17 = "npm_link_package")
load("@npm_webpack__at_types_http-proxy__1.17.9__links//:defs.bzl", link_18 = "npm_link_package")
load("@npm_webpack__at_types_json-schema__7.0.11__links//:defs.bzl", link_19 = "npm_link_package")
load("@npm_webpack__at_types_mime__1.3.2__links//:defs.bzl", link_20 = "npm_link_package")
load("@npm_webpack__at_types_node__17.0.40__links//:defs.bzl", link_21 = "npm_link_package")
load("@npm_webpack__at_types_qs__6.9.7__links//:defs.bzl", link_22 = "npm_link_package")
load("@npm_webpack__at_types_range-parser__1.2.4__links//:defs.bzl", link_23 = "npm_link_package")
load("@npm_webpack__at_types_retry__0.12.0__links//:defs.bzl", link_24 = "npm_link_package")
load("@npm_webpack__at_types_serve-index__1.9.1__links//:defs.bzl", link_25 = "npm_link_package")
load("@npm_webpack__at_types_serve-static__1.13.10__links//:defs.bzl", link_26 = "npm_link_package")
load("@npm_webpack__at_types_sockjs__0.3.33__links//:defs.bzl", link_27 = "npm_link_package")
load("@npm_webpack__at_types_ws__8.5.3__links//:defs.bzl", link_28 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_ast__1.11.1__links//:defs.bzl", link_29 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_floating-point-hex-parser__1.11.1__links//:defs.bzl", link_30 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_helper-api-error__1.11.1__links//:defs.bzl", link_31 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_helper-buffer__1.11.1__links//:defs.bzl", link_32 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_helper-numbers__1.11.1__links//:defs.bzl", link_33 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_helper-wasm-bytecode__1.11.1__links//:defs.bzl", link_34 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_helper-wasm-section__1.11.1__links//:defs.bzl", link_35 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_ieee754__1.11.1__links//:defs.bzl", link_36 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_leb128__1.11.1__links//:defs.bzl", link_37 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_utf8__1.11.1__links//:defs.bzl", link_38 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_wasm-edit__1.11.1__links//:defs.bzl", link_39 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_wasm-gen__1.11.1__links//:defs.bzl", link_40 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_wasm-opt__1.11.1__links//:defs.bzl", link_41 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_wasm-parser__1.11.1__links//:defs.bzl", link_42 = "npm_link_package")
load("@npm_webpack__at_webassemblyjs_wast-printer__1.11.1__links//:defs.bzl", link_43 = "npm_link_package")
load("@npm_webpack__at_webpack-cli_configtest__1.1.1__smhu6mcfcg7aivfsuosc335k3u__links//:defs.bzl", link_44 = "npm_link_package")
load("@npm_webpack__at_webpack-cli_info__1.4.1__webpack-cli_4.9.2__links//:defs.bzl", link_45 = "npm_link_package")
load("@npm_webpack__at_webpack-cli_serve__1.6.1__wrq76o5olao5kakxgxx43iiltu__links//:defs.bzl", link_46 = "npm_link_package")
load("@npm_webpack__at_xtuc_ieee754__1.2.0__links//:defs.bzl", link_47 = "npm_link_package")
load("@npm_webpack__at_xtuc_long__4.2.2__links//:defs.bzl", link_48 = "npm_link_package")
load("@npm_webpack__accepts__1.3.8__links//:defs.bzl", link_49 = "npm_link_package")
load("@npm_webpack__acorn-import-assertions__1.8.0__acorn_8.7.1__links//:defs.bzl", link_50 = "npm_link_package")
load("@npm_webpack__acorn__8.7.1__links//:defs.bzl", link_51 = "npm_link_package")
load("@npm_webpack__ajv-formats__2.1.1__links//:defs.bzl", link_52 = "npm_link_package")
load("@npm_webpack__ajv-keywords__3.5.2__ajv_6.12.6__links//:defs.bzl", link_53 = "npm_link_package")
load("@npm_webpack__ajv-keywords__5.1.0__ajv_8.11.0__links//:defs.bzl", link_54 = "npm_link_package")
load("@npm_webpack__ajv__6.12.6__links//:defs.bzl", link_55 = "npm_link_package")
load("@npm_webpack__ajv__8.11.0__links//:defs.bzl", link_56 = "npm_link_package")
load("@npm_webpack__ansi-html-community__0.0.8__links//:defs.bzl", link_57 = "npm_link_package")
load("@npm_webpack__anymatch__3.1.2__links//:defs.bzl", link_58 = "npm_link_package")
load("@npm_webpack__array-flatten__1.1.1__links//:defs.bzl", link_59 = "npm_link_package")
load("@npm_webpack__array-flatten__2.1.2__links//:defs.bzl", link_60 = "npm_link_package")
load("@npm_webpack__balanced-match__1.0.2__links//:defs.bzl", link_61 = "npm_link_package")
load("@npm_webpack__batch__0.6.1__links//:defs.bzl", link_62 = "npm_link_package")
load("@npm_webpack__binary-extensions__2.2.0__links//:defs.bzl", link_63 = "npm_link_package")
load("@npm_webpack__body-parser__1.20.0__links//:defs.bzl", link_64 = "npm_link_package")
load("@npm_webpack__bonjour-service__1.0.12__links//:defs.bzl", link_65 = "npm_link_package")
load("@npm_webpack__brace-expansion__1.1.11__links//:defs.bzl", link_66 = "npm_link_package")
load("@npm_webpack__braces__3.0.2__links//:defs.bzl", link_67 = "npm_link_package")
load("@npm_webpack__browserslist__4.20.3__links//:defs.bzl", link_68 = "npm_link_package")
load("@npm_webpack__buffer-from__1.1.2__links//:defs.bzl", link_69 = "npm_link_package")
load("@npm_webpack__bytes__3.0.0__links//:defs.bzl", link_70 = "npm_link_package")
load("@npm_webpack__bytes__3.1.2__links//:defs.bzl", link_71 = "npm_link_package")
load("@npm_webpack__call-bind__1.0.2__links//:defs.bzl", link_72 = "npm_link_package")
load("@npm_webpack__caniuse-lite__1.0.30001346__links//:defs.bzl", link_73 = "npm_link_package")
load("@npm_webpack__chokidar__3.5.3__links//:defs.bzl", link_74 = "npm_link_package")
load("@npm_webpack__chrome-trace-event__1.0.3__links//:defs.bzl", link_75 = "npm_link_package")
load("@npm_webpack__clone-deep__4.0.1__links//:defs.bzl", link_76 = "npm_link_package")
load("@npm_webpack__colorette__2.0.17__links//:defs.bzl", link_77 = "npm_link_package")
load("@npm_webpack__commander__2.20.3__links//:defs.bzl", link_78 = "npm_link_package")
load("@npm_webpack__commander__7.2.0__links//:defs.bzl", link_79 = "npm_link_package")
load("@npm_webpack__compressible__2.0.18__links//:defs.bzl", link_80 = "npm_link_package")
load("@npm_webpack__compression__1.7.4__links//:defs.bzl", link_81 = "npm_link_package")
load("@npm_webpack__concat-map__0.0.1__links//:defs.bzl", link_82 = "npm_link_package")
load("@npm_webpack__connect-history-api-fallback__1.6.0__links//:defs.bzl", link_83 = "npm_link_package")
load("@npm_webpack__content-disposition__0.5.4__links//:defs.bzl", link_84 = "npm_link_package")
load("@npm_webpack__content-type__1.0.4__links//:defs.bzl", link_85 = "npm_link_package")
load("@npm_webpack__cookie-signature__1.0.6__links//:defs.bzl", link_86 = "npm_link_package")
load("@npm_webpack__cookie__0.5.0__links//:defs.bzl", link_87 = "npm_link_package")
load("@npm_webpack__core-util-is__1.0.3__links//:defs.bzl", link_88 = "npm_link_package")
load("@npm_webpack__cross-spawn__7.0.3__links//:defs.bzl", link_89 = "npm_link_package")
load("@npm_webpack__debug__2.6.9__links//:defs.bzl", link_90 = "npm_link_package")
load("@npm_webpack__debug__4.3.4__links//:defs.bzl", link_91 = "npm_link_package")
load("@npm_webpack__default-gateway__6.0.3__links//:defs.bzl", link_92 = "npm_link_package")
load("@npm_webpack__define-lazy-prop__2.0.0__links//:defs.bzl", link_93 = "npm_link_package")
load("@npm_webpack__depd__1.1.2__links//:defs.bzl", link_94 = "npm_link_package")
load("@npm_webpack__depd__2.0.0__links//:defs.bzl", link_95 = "npm_link_package")
load("@npm_webpack__destroy__1.2.0__links//:defs.bzl", link_96 = "npm_link_package")
load("@npm_webpack__detect-node__2.1.0__links//:defs.bzl", link_97 = "npm_link_package")
load("@npm_webpack__dns-equal__1.0.0__links//:defs.bzl", link_98 = "npm_link_package")
load("@npm_webpack__dns-packet__5.3.1__links//:defs.bzl", link_99 = "npm_link_package")
load("@npm_webpack__ee-first__1.1.1__links//:defs.bzl", link_100 = "npm_link_package")
load("@npm_webpack__electron-to-chromium__1.4.146__links//:defs.bzl", link_101 = "npm_link_package")
load("@npm_webpack__encodeurl__1.0.2__links//:defs.bzl", link_102 = "npm_link_package")
load("@npm_webpack__enhanced-resolve__5.9.3__links//:defs.bzl", link_103 = "npm_link_package")
load("@npm_webpack__envinfo__7.8.1__links//:defs.bzl", link_104 = "npm_link_package")
load("@npm_webpack__es-module-lexer__0.9.3__links//:defs.bzl", link_105 = "npm_link_package")
load("@npm_webpack__escalade__3.1.1__links//:defs.bzl", link_106 = "npm_link_package")
load("@npm_webpack__escape-html__1.0.3__links//:defs.bzl", link_107 = "npm_link_package")
load("@npm_webpack__eslint-scope__5.1.1__links//:defs.bzl", link_108 = "npm_link_package")
load("@npm_webpack__esrecurse__4.3.0__links//:defs.bzl", link_109 = "npm_link_package")
load("@npm_webpack__estraverse__4.3.0__links//:defs.bzl", link_110 = "npm_link_package")
load("@npm_webpack__estraverse__5.3.0__links//:defs.bzl", link_111 = "npm_link_package")
load("@npm_webpack__etag__1.8.1__links//:defs.bzl", link_112 = "npm_link_package")
load("@npm_webpack__eventemitter3__4.0.7__links//:defs.bzl", link_113 = "npm_link_package")
load("@npm_webpack__events__3.3.0__links//:defs.bzl", link_114 = "npm_link_package")
load("@npm_webpack__execa__5.1.1__links//:defs.bzl", link_115 = "npm_link_package")
load("@npm_webpack__express__4.18.1__links//:defs.bzl", link_116 = "npm_link_package")
load("@npm_webpack__fast-deep-equal__3.1.3__links//:defs.bzl", link_117 = "npm_link_package")
load("@npm_webpack__fast-json-stable-stringify__2.1.0__links//:defs.bzl", link_118 = "npm_link_package")
load("@npm_webpack__fastest-levenshtein__1.0.12__links//:defs.bzl", link_119 = "npm_link_package")
load("@npm_webpack__faye-websocket__0.11.4__links//:defs.bzl", link_120 = "npm_link_package")
load("@npm_webpack__fill-range__7.0.1__links//:defs.bzl", link_121 = "npm_link_package")
load("@npm_webpack__finalhandler__1.2.0__links//:defs.bzl", link_122 = "npm_link_package")
load("@npm_webpack__find-up__4.1.0__links//:defs.bzl", link_123 = "npm_link_package")
load("@npm_webpack__follow-redirects__1.15.1__links//:defs.bzl", link_124 = "npm_link_package")
load("@npm_webpack__forwarded__0.2.0__links//:defs.bzl", link_125 = "npm_link_package")
load("@npm_webpack__fresh__0.5.2__links//:defs.bzl", link_126 = "npm_link_package")
load("@npm_webpack__fs-monkey__1.0.3__links//:defs.bzl", link_127 = "npm_link_package")
load("@npm_webpack__fs.realpath__1.0.0__links//:defs.bzl", link_128 = "npm_link_package")
load("@npm_webpack__fsevents__2.3.2__links//:defs.bzl", link_129 = "npm_link_package")
load("@npm_webpack__function-bind__1.1.1__links//:defs.bzl", link_130 = "npm_link_package")
load("@npm_webpack__get-intrinsic__1.1.1__links//:defs.bzl", link_131 = "npm_link_package")
load("@npm_webpack__get-stream__6.0.1__links//:defs.bzl", link_132 = "npm_link_package")
load("@npm_webpack__glob-parent__5.1.2__links//:defs.bzl", link_133 = "npm_link_package")
load("@npm_webpack__glob-to-regexp__0.4.1__links//:defs.bzl", link_134 = "npm_link_package")
load("@npm_webpack__glob__7.2.3__links//:defs.bzl", link_135 = "npm_link_package")
load("@npm_webpack__google-protobuf__3.20.1__links//:defs.bzl", link_136 = "npm_link_package")
load("@npm_webpack__graceful-fs__4.2.10__links//:defs.bzl", link_137 = "npm_link_package")
load("@npm_webpack__handle-thing__2.0.1__links//:defs.bzl", link_138 = "npm_link_package")
load("@npm_webpack__has-flag__4.0.0__links//:defs.bzl", link_139 = "npm_link_package")
load("@npm_webpack__has-symbols__1.0.3__links//:defs.bzl", link_140 = "npm_link_package")
load("@npm_webpack__has__1.0.3__links//:defs.bzl", link_141 = "npm_link_package")
load("@npm_webpack__hpack.js__2.1.6__links//:defs.bzl", link_142 = "npm_link_package")
load("@npm_webpack__html-entities__2.3.3__links//:defs.bzl", link_143 = "npm_link_package")
load("@npm_webpack__http-deceiver__1.2.7__links//:defs.bzl", link_144 = "npm_link_package")
load("@npm_webpack__http-errors__1.6.3__links//:defs.bzl", link_145 = "npm_link_package")
load("@npm_webpack__http-errors__2.0.0__links//:defs.bzl", link_146 = "npm_link_package")
load("@npm_webpack__http-parser-js__0.5.6__links//:defs.bzl", link_147 = "npm_link_package")
load("@npm_webpack__http-proxy-middleware__2.0.6__at_types_express_4.17.13__links//:defs.bzl", link_148 = "npm_link_package")
load("@npm_webpack__http-proxy__1.18.1__links//:defs.bzl", link_149 = "npm_link_package")
load("@npm_webpack__human-signals__2.1.0__links//:defs.bzl", link_150 = "npm_link_package")
load("@npm_webpack__iconv-lite__0.4.24__links//:defs.bzl", link_151 = "npm_link_package")
load("@npm_webpack__import-local__3.1.0__links//:defs.bzl", link_152 = "npm_link_package")
load("@npm_webpack__inflight__1.0.6__links//:defs.bzl", link_153 = "npm_link_package")
load("@npm_webpack__inherits__2.0.3__links//:defs.bzl", link_154 = "npm_link_package")
load("@npm_webpack__inherits__2.0.4__links//:defs.bzl", link_155 = "npm_link_package")
load("@npm_webpack__interpret__2.2.0__links//:defs.bzl", link_156 = "npm_link_package")
load("@npm_webpack__ipaddr.js__1.9.1__links//:defs.bzl", link_157 = "npm_link_package")
load("@npm_webpack__ipaddr.js__2.0.1__links//:defs.bzl", link_158 = "npm_link_package")
load("@npm_webpack__is-binary-path__2.1.0__links//:defs.bzl", link_159 = "npm_link_package")
load("@npm_webpack__is-core-module__2.9.0__links//:defs.bzl", link_160 = "npm_link_package")
load("@npm_webpack__is-docker__2.2.1__links//:defs.bzl", link_161 = "npm_link_package")
load("@npm_webpack__is-extglob__2.1.1__links//:defs.bzl", link_162 = "npm_link_package")
load("@npm_webpack__is-glob__4.0.3__links//:defs.bzl", link_163 = "npm_link_package")
load("@npm_webpack__is-number__7.0.0__links//:defs.bzl", link_164 = "npm_link_package")
load("@npm_webpack__is-plain-obj__3.0.0__links//:defs.bzl", link_165 = "npm_link_package")
load("@npm_webpack__is-plain-object__2.0.4__links//:defs.bzl", link_166 = "npm_link_package")
load("@npm_webpack__is-stream__2.0.1__links//:defs.bzl", link_167 = "npm_link_package")
load("@npm_webpack__is-wsl__2.2.0__links//:defs.bzl", link_168 = "npm_link_package")
load("@npm_webpack__isarray__1.0.0__links//:defs.bzl", link_169 = "npm_link_package")
load("@npm_webpack__isexe__2.0.0__links//:defs.bzl", link_170 = "npm_link_package")
load("@npm_webpack__isobject__3.0.1__links//:defs.bzl", link_171 = "npm_link_package")
load("@npm_webpack__jest-worker__27.5.1__links//:defs.bzl", link_172 = "npm_link_package")
load("@npm_webpack__json-parse-even-better-errors__2.3.1__links//:defs.bzl", link_173 = "npm_link_package")
load("@npm_webpack__json-schema-traverse__0.4.1__links//:defs.bzl", link_174 = "npm_link_package")
load("@npm_webpack__json-schema-traverse__1.0.0__links//:defs.bzl", link_175 = "npm_link_package")
load("@npm_webpack__kind-of__6.0.3__links//:defs.bzl", link_176 = "npm_link_package")
load("@npm_webpack__loader-runner__4.3.0__links//:defs.bzl", link_177 = "npm_link_package")
load("@npm_webpack__locate-path__5.0.0__links//:defs.bzl", link_178 = "npm_link_package")
load("@npm_webpack__media-typer__0.3.0__links//:defs.bzl", link_179 = "npm_link_package")
load("@npm_webpack__memfs__3.4.4__links//:defs.bzl", link_180 = "npm_link_package")
load("@npm_webpack__merge-descriptors__1.0.1__links//:defs.bzl", link_181 = "npm_link_package")
load("@npm_webpack__merge-stream__2.0.0__links//:defs.bzl", link_182 = "npm_link_package")
load("@npm_webpack__methods__1.1.2__links//:defs.bzl", link_183 = "npm_link_package")
load("@npm_webpack__micromatch__4.0.5__links//:defs.bzl", link_184 = "npm_link_package")
load("@npm_webpack__mime-db__1.52.0__links//:defs.bzl", link_185 = "npm_link_package")
load("@npm_webpack__mime-types__2.1.35__links//:defs.bzl", link_186 = "npm_link_package")
load("@npm_webpack__mime__1.6.0__links//:defs.bzl", link_187 = "npm_link_package")
load("@npm_webpack__mimic-fn__2.1.0__links//:defs.bzl", link_188 = "npm_link_package")
load("@npm_webpack__minimalistic-assert__1.0.1__links//:defs.bzl", link_189 = "npm_link_package")
load("@npm_webpack__minimatch__3.1.2__links//:defs.bzl", link_190 = "npm_link_package")
load("@npm_webpack__ms__2.0.0__links//:defs.bzl", link_191 = "npm_link_package")
load("@npm_webpack__ms__2.1.2__links//:defs.bzl", link_192 = "npm_link_package")
load("@npm_webpack__ms__2.1.3__links//:defs.bzl", link_193 = "npm_link_package")
load("@npm_webpack__multicast-dns__7.2.5__links//:defs.bzl", link_194 = "npm_link_package")
load("@npm_webpack__negotiator__0.6.3__links//:defs.bzl", link_195 = "npm_link_package")
load("@npm_webpack__neo-async__2.6.2__links//:defs.bzl", link_196 = "npm_link_package")
load("@npm_webpack__node-forge__1.3.1__links//:defs.bzl", link_197 = "npm_link_package")
load("@npm_webpack__node-releases__2.0.5__links//:defs.bzl", link_198 = "npm_link_package")
load("@npm_webpack__normalize-path__3.0.0__links//:defs.bzl", link_199 = "npm_link_package")
load("@npm_webpack__npm-run-path__4.0.1__links//:defs.bzl", link_200 = "npm_link_package")
load("@npm_webpack__object-inspect__1.12.2__links//:defs.bzl", link_201 = "npm_link_package")
load("@npm_webpack__obuf__1.1.2__links//:defs.bzl", link_202 = "npm_link_package")
load("@npm_webpack__on-finished__2.4.1__links//:defs.bzl", link_203 = "npm_link_package")
load("@npm_webpack__on-headers__1.0.2__links//:defs.bzl", link_204 = "npm_link_package")
load("@npm_webpack__once__1.4.0__links//:defs.bzl", link_205 = "npm_link_package")
load("@npm_webpack__onetime__5.1.2__links//:defs.bzl", link_206 = "npm_link_package")
load("@npm_webpack__open__8.4.0__links//:defs.bzl", link_207 = "npm_link_package")
load("@npm_webpack__p-limit__2.3.0__links//:defs.bzl", link_208 = "npm_link_package")
load("@npm_webpack__p-locate__4.1.0__links//:defs.bzl", link_209 = "npm_link_package")
load("@npm_webpack__p-retry__4.6.2__links//:defs.bzl", link_210 = "npm_link_package")
load("@npm_webpack__p-try__2.2.0__links//:defs.bzl", link_211 = "npm_link_package")
load("@npm_webpack__parseurl__1.3.3__links//:defs.bzl", link_212 = "npm_link_package")
load("@npm_webpack__path-exists__4.0.0__links//:defs.bzl", link_213 = "npm_link_package")
load("@npm_webpack__path-is-absolute__1.0.1__links//:defs.bzl", link_214 = "npm_link_package")
load("@npm_webpack__path-key__3.1.1__links//:defs.bzl", link_215 = "npm_link_package")
load("@npm_webpack__path-parse__1.0.7__links//:defs.bzl", link_216 = "npm_link_package")
load("@npm_webpack__path-to-regexp__0.1.7__links//:defs.bzl", link_217 = "npm_link_package")
load("@npm_webpack__picocolors__1.0.0__links//:defs.bzl", link_218 = "npm_link_package")
load("@npm_webpack__picomatch__2.3.1__links//:defs.bzl", link_219 = "npm_link_package")
load("@npm_webpack__pkg-dir__4.2.0__links//:defs.bzl", link_220 = "npm_link_package")
load("@npm_webpack__process-nextick-args__2.0.1__links//:defs.bzl", link_221 = "npm_link_package")
load("@npm_webpack__proxy-addr__2.0.7__links//:defs.bzl", link_222 = "npm_link_package")
load("@npm_webpack__punycode__2.1.1__links//:defs.bzl", link_223 = "npm_link_package")
load("@npm_webpack__qs__6.10.3__links//:defs.bzl", link_224 = "npm_link_package")
load("@npm_webpack__randombytes__2.1.0__links//:defs.bzl", link_225 = "npm_link_package")
load("@npm_webpack__range-parser__1.2.1__links//:defs.bzl", link_226 = "npm_link_package")
load("@npm_webpack__raw-body__2.5.1__links//:defs.bzl", link_227 = "npm_link_package")
load("@npm_webpack__readable-stream__2.3.7__links//:defs.bzl", link_228 = "npm_link_package")
load("@npm_webpack__readable-stream__3.6.0__links//:defs.bzl", link_229 = "npm_link_package")
load("@npm_webpack__readdirp__3.6.0__links//:defs.bzl", link_230 = "npm_link_package")
load("@npm_webpack__rechoir__0.7.1__links//:defs.bzl", link_231 = "npm_link_package")
load("@npm_webpack__require-from-string__2.0.2__links//:defs.bzl", link_232 = "npm_link_package")
load("@npm_webpack__requires-port__1.0.0__links//:defs.bzl", link_233 = "npm_link_package")
load("@npm_webpack__resolve-cwd__3.0.0__links//:defs.bzl", link_234 = "npm_link_package")
load("@npm_webpack__resolve-from__5.0.0__links//:defs.bzl", link_235 = "npm_link_package")
load("@npm_webpack__resolve__1.22.0__links//:defs.bzl", link_236 = "npm_link_package")
load("@npm_webpack__retry__0.13.1__links//:defs.bzl", link_237 = "npm_link_package")
load("@npm_webpack__rimraf__3.0.2__links//:defs.bzl", link_238 = "npm_link_package")
load("@npm_webpack__safe-buffer__5.1.2__links//:defs.bzl", link_239 = "npm_link_package")
load("@npm_webpack__safe-buffer__5.2.1__links//:defs.bzl", link_240 = "npm_link_package")
load("@npm_webpack__safer-buffer__2.1.2__links//:defs.bzl", link_241 = "npm_link_package")
load("@npm_webpack__schema-utils__3.1.1__links//:defs.bzl", link_242 = "npm_link_package")
load("@npm_webpack__schema-utils__4.0.0__links//:defs.bzl", link_243 = "npm_link_package")
load("@npm_webpack__select-hose__2.0.0__links//:defs.bzl", link_244 = "npm_link_package")
load("@npm_webpack__selfsigned__2.0.1__links//:defs.bzl", link_245 = "npm_link_package")
load("@npm_webpack__send__0.18.0__links//:defs.bzl", link_246 = "npm_link_package")
load("@npm_webpack__serialize-javascript__6.0.0__links//:defs.bzl", link_247 = "npm_link_package")
load("@npm_webpack__serve-index__1.9.1__links//:defs.bzl", link_248 = "npm_link_package")
load("@npm_webpack__serve-static__1.15.0__links//:defs.bzl", link_249 = "npm_link_package")
load("@npm_webpack__setprototypeof__1.1.0__links//:defs.bzl", link_250 = "npm_link_package")
load("@npm_webpack__setprototypeof__1.2.0__links//:defs.bzl", link_251 = "npm_link_package")
load("@npm_webpack__shallow-clone__3.0.1__links//:defs.bzl", link_252 = "npm_link_package")
load("@npm_webpack__shebang-command__2.0.0__links//:defs.bzl", link_253 = "npm_link_package")
load("@npm_webpack__shebang-regex__3.0.0__links//:defs.bzl", link_254 = "npm_link_package")
load("@npm_webpack__side-channel__1.0.4__links//:defs.bzl", link_255 = "npm_link_package")
load("@npm_webpack__signal-exit__3.0.7__links//:defs.bzl", link_256 = "npm_link_package")
load("@npm_webpack__sockjs__0.3.24__links//:defs.bzl", link_257 = "npm_link_package")
load("@npm_webpack__source-map-support__0.5.21__links//:defs.bzl", link_258 = "npm_link_package")
load("@npm_webpack__source-map__0.6.1__links//:defs.bzl", link_259 = "npm_link_package")
load("@npm_webpack__spdy-transport__3.0.0__links//:defs.bzl", link_260 = "npm_link_package")
load("@npm_webpack__spdy__4.0.2__links//:defs.bzl", link_261 = "npm_link_package")
load("@npm_webpack__statuses__1.5.0__links//:defs.bzl", link_262 = "npm_link_package")
load("@npm_webpack__statuses__2.0.1__links//:defs.bzl", link_263 = "npm_link_package")
load("@npm_webpack__string_decoder__1.1.1__links//:defs.bzl", link_264 = "npm_link_package")
load("@npm_webpack__string_decoder__1.3.0__links//:defs.bzl", link_265 = "npm_link_package")
load("@npm_webpack__strip-final-newline__2.0.0__links//:defs.bzl", link_266 = "npm_link_package")
load("@npm_webpack__supports-color__8.1.1__links//:defs.bzl", link_267 = "npm_link_package")
load("@npm_webpack__supports-preserve-symlinks-flag__1.0.0__links//:defs.bzl", link_268 = "npm_link_package")
load("@npm_webpack__tapable__2.2.1__links//:defs.bzl", link_269 = "npm_link_package")
load("@npm_webpack__terser-webpack-plugin__5.3.3__webpack_5.72.1__links//:defs.bzl", link_270 = "npm_link_package")
load("@npm_webpack__terser__5.14.0__links//:defs.bzl", link_271 = "npm_link_package")
load("@npm_webpack__thunky__1.1.0__links//:defs.bzl", link_272 = "npm_link_package")
load("@npm_webpack__to-regex-range__5.0.1__links//:defs.bzl", link_273 = "npm_link_package")
load("@npm_webpack__toidentifier__1.0.1__links//:defs.bzl", link_274 = "npm_link_package")
load("@npm_webpack__type-is__1.6.18__links//:defs.bzl", link_275 = "npm_link_package")
load("@npm_webpack__unpipe__1.0.0__links//:defs.bzl", link_276 = "npm_link_package")
load("@npm_webpack__uri-js__4.4.1__links//:defs.bzl", link_277 = "npm_link_package")
load("@npm_webpack__util-deprecate__1.0.2__links//:defs.bzl", link_278 = "npm_link_package")
load("@npm_webpack__utils-merge__1.0.1__links//:defs.bzl", link_279 = "npm_link_package")
load("@npm_webpack__uuid__8.3.2__links//:defs.bzl", link_280 = "npm_link_package")
load("@npm_webpack__vary__1.1.2__links//:defs.bzl", link_281 = "npm_link_package")
load("@npm_webpack__watchpack__2.4.0__links//:defs.bzl", link_282 = "npm_link_package")
load("@npm_webpack__wbuf__1.7.3__links//:defs.bzl", link_283 = "npm_link_package")
load("@npm_webpack__webpack-cli__4.9.2__2duiwyorgszm4t5vsjijwujnv4__links//:defs.bzl", link_284 = "npm_link_package")
load("@npm_webpack__webpack-dev-middleware__5.3.3__webpack_5.72.1__links//:defs.bzl", link_285 = "npm_link_package")
load("@npm_webpack__webpack-dev-server__4.9.1__smhu6mcfcg7aivfsuosc335k3u__links//:defs.bzl", link_286 = "npm_link_package")
load("@npm_webpack__webpack-merge__5.8.0__links//:defs.bzl", link_287 = "npm_link_package")
load("@npm_webpack__webpack-sources__3.2.3__links//:defs.bzl", link_288 = "npm_link_package")
load("@npm_webpack__webpack__5.72.1__webpack-cli_4.9.2__links//:defs.bzl", link_289 = "npm_link_package")
load("@npm_webpack__websocket-driver__0.7.4__links//:defs.bzl", link_290 = "npm_link_package")
load("@npm_webpack__websocket-extensions__0.1.4__links//:defs.bzl", link_291 = "npm_link_package")
load("@npm_webpack__which__2.0.2__links//:defs.bzl", link_292 = "npm_link_package")
load("@npm_webpack__wildcard__2.0.0__links//:defs.bzl", link_293 = "npm_link_package")
load("@npm_webpack__wrappy__1.0.2__links//:defs.bzl", link_294 = "npm_link_package")
load("@npm_webpack__ws__8.7.0__links//:defs.bzl", link_295 = "npm_link_package")

def npm_link_all_packages(name = "node_modules"):
    """Generated list of npm_link_package() target generators and first-party linked packages corresponding to the packages in @//:pnpm-lock.yaml

    Args:
        name: name of catch all target to generate for all packages linked
    """
    root_package = ""
    link_packages = [""]
    is_root = native.package_name() == root_package
    is_direct = native.package_name() in link_packages
    if not is_root and not is_direct:
        msg = "The npm_link_all_packages() macro loaded from @npm_webpack//:defs.bzl and called in bazel package '%s' may only be called in the bazel package(s) corresponding to the root package '' and packages ['']" % native.package_name()
        fail(msg)
    direct_targets = []
    scoped_direct_targets = {}

    scoped_direct_targets["@bazel"] = []
    scoped_direct_targets["@discoveryjs"] = []
    scoped_direct_targets["@jridgewell"] = []
    scoped_direct_targets["@leichtgewicht"] = []
    scoped_direct_targets["@types"] = []
    scoped_direct_targets["@webassemblyjs"] = []
    scoped_direct_targets["@webpack-cli"] = []
    scoped_direct_targets["@xtuc"] = []
    direct_targets.append(link_0(name = "{}/@bazel/worker".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@bazel"].append(direct_targets[-1])
    direct_targets.append(link_1(name = "{}/@discoveryjs/json-ext".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@discoveryjs"].append(direct_targets[-1])
    direct_targets.append(link_2(name = "{}/@jridgewell/gen-mapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_3(name = "{}/@jridgewell/resolve-uri".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_4(name = "{}/@jridgewell/set-array".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_5(name = "{}/@jridgewell/source-map".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_6(name = "{}/@jridgewell/sourcemap-codec".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_7(name = "{}/@jridgewell/trace-mapping".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@jridgewell"].append(direct_targets[-1])
    direct_targets.append(link_8(name = "{}/@leichtgewicht/ip-codec".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@leichtgewicht"].append(direct_targets[-1])
    direct_targets.append(link_9(name = "{}/@types/body-parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_10(name = "{}/@types/bonjour".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_11(name = "{}/@types/connect-history-api-fallback".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_12(name = "{}/@types/connect".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_13(name = "{}/@types/eslint-scope".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_14(name = "{}/@types/eslint".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_15(name = "{}/@types/estree".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_16(name = "{}/@types/express-serve-static-core".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_17(name = "{}/@types/express".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_18(name = "{}/@types/http-proxy".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_19(name = "{}/@types/json-schema".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_20(name = "{}/@types/mime".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_21(name = "{}/@types/node".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_22(name = "{}/@types/qs".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_23(name = "{}/@types/range-parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_24(name = "{}/@types/retry".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_25(name = "{}/@types/serve-index".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_26(name = "{}/@types/serve-static".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_27(name = "{}/@types/sockjs".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_28(name = "{}/@types/ws".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@types"].append(direct_targets[-1])
    direct_targets.append(link_29(name = "{}/@webassemblyjs/ast".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_30(name = "{}/@webassemblyjs/floating-point-hex-parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_31(name = "{}/@webassemblyjs/helper-api-error".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_32(name = "{}/@webassemblyjs/helper-buffer".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_33(name = "{}/@webassemblyjs/helper-numbers".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_34(name = "{}/@webassemblyjs/helper-wasm-bytecode".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_35(name = "{}/@webassemblyjs/helper-wasm-section".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_36(name = "{}/@webassemblyjs/ieee754".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_37(name = "{}/@webassemblyjs/leb128".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_38(name = "{}/@webassemblyjs/utf8".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_39(name = "{}/@webassemblyjs/wasm-edit".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_40(name = "{}/@webassemblyjs/wasm-gen".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_41(name = "{}/@webassemblyjs/wasm-opt".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_42(name = "{}/@webassemblyjs/wasm-parser".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_43(name = "{}/@webassemblyjs/wast-printer".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webassemblyjs"].append(direct_targets[-1])
    direct_targets.append(link_44(name = "{}/@webpack-cli/configtest".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webpack-cli"].append(direct_targets[-1])
    direct_targets.append(link_45(name = "{}/@webpack-cli/info".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webpack-cli"].append(direct_targets[-1])
    direct_targets.append(link_46(name = "{}/@webpack-cli/serve".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@webpack-cli"].append(direct_targets[-1])
    direct_targets.append(link_47(name = "{}/@xtuc/ieee754".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@xtuc"].append(direct_targets[-1])
    direct_targets.append(link_48(name = "{}/@xtuc/long".format(name), direct = None, fail_if_no_link = False))
    scoped_direct_targets["@xtuc"].append(direct_targets[-1])
    direct_targets.append(link_49(name = "{}/accepts".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_50(name = "{}/acorn-import-assertions".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_51(name = "{}/acorn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_52(name = "{}/ajv-formats".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_53(name = "{}/ajv-keywords".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_54(name = "{}/ajv-keywords".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_55(name = "{}/ajv".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_56(name = "{}/ajv".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_57(name = "{}/ansi-html-community".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_58(name = "{}/anymatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_59(name = "{}/array-flatten".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_60(name = "{}/array-flatten".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_61(name = "{}/balanced-match".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_62(name = "{}/batch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_63(name = "{}/binary-extensions".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_64(name = "{}/body-parser".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_65(name = "{}/bonjour-service".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_66(name = "{}/brace-expansion".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_67(name = "{}/braces".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_68(name = "{}/browserslist".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_69(name = "{}/buffer-from".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_70(name = "{}/bytes".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_71(name = "{}/bytes".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_72(name = "{}/call-bind".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_73(name = "{}/caniuse-lite".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_74(name = "{}/chokidar".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_75(name = "{}/chrome-trace-event".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_76(name = "{}/clone-deep".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_77(name = "{}/colorette".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_78(name = "{}/commander".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_79(name = "{}/commander".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_80(name = "{}/compressible".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_81(name = "{}/compression".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_82(name = "{}/concat-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_83(name = "{}/connect-history-api-fallback".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_84(name = "{}/content-disposition".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_85(name = "{}/content-type".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_86(name = "{}/cookie-signature".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_87(name = "{}/cookie".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_88(name = "{}/core-util-is".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_89(name = "{}/cross-spawn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_90(name = "{}/debug".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_91(name = "{}/debug".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_92(name = "{}/default-gateway".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_93(name = "{}/define-lazy-prop".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_94(name = "{}/depd".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_95(name = "{}/depd".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_96(name = "{}/destroy".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_97(name = "{}/detect-node".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_98(name = "{}/dns-equal".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_99(name = "{}/dns-packet".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_100(name = "{}/ee-first".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_101(name = "{}/electron-to-chromium".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_102(name = "{}/encodeurl".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_103(name = "{}/enhanced-resolve".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_104(name = "{}/envinfo".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_105(name = "{}/es-module-lexer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_106(name = "{}/escalade".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_107(name = "{}/escape-html".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_108(name = "{}/eslint-scope".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_109(name = "{}/esrecurse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_110(name = "{}/estraverse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_111(name = "{}/estraverse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_112(name = "{}/etag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_113(name = "{}/eventemitter3".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_114(name = "{}/events".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_115(name = "{}/execa".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_116(name = "{}/express".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_117(name = "{}/fast-deep-equal".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_118(name = "{}/fast-json-stable-stringify".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_119(name = "{}/fastest-levenshtein".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_120(name = "{}/faye-websocket".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_121(name = "{}/fill-range".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_122(name = "{}/finalhandler".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_123(name = "{}/find-up".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_124(name = "{}/follow-redirects".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_125(name = "{}/forwarded".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_126(name = "{}/fresh".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_127(name = "{}/fs-monkey".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_128(name = "{}/fs.realpath".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_129(name = "{}/fsevents".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_130(name = "{}/function-bind".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_131(name = "{}/get-intrinsic".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_132(name = "{}/get-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_133(name = "{}/glob-parent".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_134(name = "{}/glob-to-regexp".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_135(name = "{}/glob".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_136(name = "{}/google-protobuf".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_137(name = "{}/graceful-fs".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_138(name = "{}/handle-thing".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_139(name = "{}/has-flag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_140(name = "{}/has-symbols".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_141(name = "{}/has".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_142(name = "{}/hpack.js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_143(name = "{}/html-entities".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_144(name = "{}/http-deceiver".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_145(name = "{}/http-errors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_146(name = "{}/http-errors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_147(name = "{}/http-parser-js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_148(name = "{}/http-proxy-middleware".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_149(name = "{}/http-proxy".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_150(name = "{}/human-signals".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_151(name = "{}/iconv-lite".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_152(name = "{}/import-local".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_153(name = "{}/inflight".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_154(name = "{}/inherits".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_155(name = "{}/inherits".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_156(name = "{}/interpret".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_157(name = "{}/ipaddr.js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_158(name = "{}/ipaddr.js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_159(name = "{}/is-binary-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_160(name = "{}/is-core-module".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_161(name = "{}/is-docker".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_162(name = "{}/is-extglob".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_163(name = "{}/is-glob".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_164(name = "{}/is-number".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_165(name = "{}/is-plain-obj".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_166(name = "{}/is-plain-object".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_167(name = "{}/is-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_168(name = "{}/is-wsl".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_169(name = "{}/isarray".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_170(name = "{}/isexe".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_171(name = "{}/isobject".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_172(name = "{}/jest-worker".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_173(name = "{}/json-parse-even-better-errors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_174(name = "{}/json-schema-traverse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_175(name = "{}/json-schema-traverse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_176(name = "{}/kind-of".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_177(name = "{}/loader-runner".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_178(name = "{}/locate-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_179(name = "{}/media-typer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_180(name = "{}/memfs".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_181(name = "{}/merge-descriptors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_182(name = "{}/merge-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_183(name = "{}/methods".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_184(name = "{}/micromatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_185(name = "{}/mime-db".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_186(name = "{}/mime-types".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_187(name = "{}/mime".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_188(name = "{}/mimic-fn".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_189(name = "{}/minimalistic-assert".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_190(name = "{}/minimatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_191(name = "{}/ms".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_192(name = "{}/ms".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_193(name = "{}/ms".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_194(name = "{}/multicast-dns".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_195(name = "{}/negotiator".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_196(name = "{}/neo-async".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_197(name = "{}/node-forge".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_198(name = "{}/node-releases".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_199(name = "{}/normalize-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_200(name = "{}/npm-run-path".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_201(name = "{}/object-inspect".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_202(name = "{}/obuf".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_203(name = "{}/on-finished".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_204(name = "{}/on-headers".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_205(name = "{}/once".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_206(name = "{}/onetime".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_207(name = "{}/open".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_208(name = "{}/p-limit".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_209(name = "{}/p-locate".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_210(name = "{}/p-retry".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_211(name = "{}/p-try".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_212(name = "{}/parseurl".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_213(name = "{}/path-exists".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_214(name = "{}/path-is-absolute".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_215(name = "{}/path-key".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_216(name = "{}/path-parse".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_217(name = "{}/path-to-regexp".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_218(name = "{}/picocolors".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_219(name = "{}/picomatch".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_220(name = "{}/pkg-dir".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_221(name = "{}/process-nextick-args".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_222(name = "{}/proxy-addr".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_223(name = "{}/punycode".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_224(name = "{}/qs".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_225(name = "{}/randombytes".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_226(name = "{}/range-parser".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_227(name = "{}/raw-body".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_228(name = "{}/readable-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_229(name = "{}/readable-stream".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_230(name = "{}/readdirp".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_231(name = "{}/rechoir".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_232(name = "{}/require-from-string".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_233(name = "{}/requires-port".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_234(name = "{}/resolve-cwd".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_235(name = "{}/resolve-from".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_236(name = "{}/resolve".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_237(name = "{}/retry".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_238(name = "{}/rimraf".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_239(name = "{}/safe-buffer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_240(name = "{}/safe-buffer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_241(name = "{}/safer-buffer".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_242(name = "{}/schema-utils".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_243(name = "{}/schema-utils".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_244(name = "{}/select-hose".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_245(name = "{}/selfsigned".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_246(name = "{}/send".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_247(name = "{}/serialize-javascript".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_248(name = "{}/serve-index".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_249(name = "{}/serve-static".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_250(name = "{}/setprototypeof".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_251(name = "{}/setprototypeof".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_252(name = "{}/shallow-clone".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_253(name = "{}/shebang-command".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_254(name = "{}/shebang-regex".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_255(name = "{}/side-channel".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_256(name = "{}/signal-exit".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_257(name = "{}/sockjs".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_258(name = "{}/source-map-support".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_259(name = "{}/source-map".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_260(name = "{}/spdy-transport".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_261(name = "{}/spdy".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_262(name = "{}/statuses".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_263(name = "{}/statuses".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_264(name = "{}/string_decoder".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_265(name = "{}/string_decoder".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_266(name = "{}/strip-final-newline".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_267(name = "{}/supports-color".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_268(name = "{}/supports-preserve-symlinks-flag".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_269(name = "{}/tapable".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_270(name = "{}/terser-webpack-plugin".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_271(name = "{}/terser".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_272(name = "{}/thunky".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_273(name = "{}/to-regex-range".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_274(name = "{}/toidentifier".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_275(name = "{}/type-is".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_276(name = "{}/unpipe".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_277(name = "{}/uri-js".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_278(name = "{}/util-deprecate".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_279(name = "{}/utils-merge".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_280(name = "{}/uuid".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_281(name = "{}/vary".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_282(name = "{}/watchpack".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_283(name = "{}/wbuf".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_284(name = "{}/webpack-cli".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_285(name = "{}/webpack-dev-middleware".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_286(name = "{}/webpack-dev-server".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_287(name = "{}/webpack-merge".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_288(name = "{}/webpack-sources".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_289(name = "{}/webpack".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_290(name = "{}/websocket-driver".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_291(name = "{}/websocket-extensions".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_292(name = "{}/which".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_293(name = "{}/wildcard".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_294(name = "{}/wrappy".format(name), direct = None, fail_if_no_link = False))
    direct_targets.append(link_295(name = "{}/ws".format(name), direct = None, fail_if_no_link = False))

    for scope, scoped_targets in scoped_direct_targets.items():
        direct_scoped_targets = [t for t in scoped_targets if t]
        if direct_scoped_targets:
            npm_linked_packages(
                name = "{}/{}".format(name, scope),
                srcs = direct_scoped_targets,
                tags = ["manual"],
                visibility = ["//visibility:public"],
            )

    npm_linked_packages(
        name = name,
        srcs = [t for t in direct_targets if t],
        tags = ["manual"],
        visibility = ["//visibility:public"],
    )
