load("//webpack/private:versions.bzl", "WEBPACK_VERSIONS")

_DOC = "Fetch external tools needed for webpack toolchain"
_ATTRS = {
    "webpack_version": attr.string(),
}

LATEST_VERSION = WEBPACK_VERSIONS.keys()[-1]

def _webpack_repo_impl(repository_ctx):
    # Base BUILD file for this repository
    repository_ctx.file("BUILD.bazel", """
# Generated by aspect_rules_webpack/webpack/repositories.bzl
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@aspect_bazel_lib//lib:directory_path.bzl", "directory_path")
load("@aspect_rules_js//js:defs.bzl", "js_binary")
load("@aspect_rules_webpack//webpack/private:{version}/defs.bzl", "npm_link_all_packages")
npm_link_all_packages(name = "node_modules")

package(default_visibility = ["//visibility:public"])

directory_path(
    name = "entrypoint",
    directory = ":node_modules/webpack/dir",
    path = "bin/webpack.js"
)
js_binary(
    name = "{name}",
    data = [":node_modules/webpack", ":node_modules/webpack-dev-server", ":node_modules/webpack-cli"],
    entry_point = ":entrypoint"
)

copy_file(
    name = "copy_webpack_worker",
    src = "@aspect_rules_webpack//webpack/private:webpack_worker.js",
    out = "webpack_worker.js"
)
js_binary(
    name = "worker",
    data = [":node_modules/webpack", ":node_modules/webpack-cli", ":node_modules/@bazel/worker"],
    entry_point = "copy_webpack_worker"
)
""".format(
        name = repository_ctx.attr.name,
        version = repository_ctx.attr.webpack_version,
    ))

webpack_repositories = repository_rule(
    _webpack_repo_impl,
    doc = _DOC,
    attrs = _ATTRS,
)


# Wrapper macro around everything above, this is the primary API
def webpack_register_toolchains(name, webpack_version, **kwargs):
    """Convenience macro for users which does typical setup.
    Users can avoid this macro and do these steps themselves, if they want more control.
    Args:
        name: base name for all created repos, like "webpack"
        webpack_version: a version which is mirrored into aspect_rules_webpack
        **kwargs: passed to each node_repositories call
    """
    if webpack_version not in WEBPACK_VERSIONS.keys():
        fail("""
webpack version {} is not currently mirrored into aspect_rules_webpack.
Please instead choose one of these available versions: {}""".format(webpack_version, WEBPACK_VERSIONS.keys()))

    WEBPACK_VERSIONS[webpack_version]()

    webpack_repositories(
        name = name,
        webpack_version = webpack_version,
    )

